default:
  image: 'rust:1.38-alpine'

stages:
  - build
  - test
  - examples
  - doc

variables:
  CARGO_HOME_BIN: $HOME/.cargo/bin
  TARGET: target
  COVER: cover

.build_template: &build_definition
  stage: build
  script:
    - "rustc --version && cargo --version"
    - cargo build --verbose
    - cargo build --verbose --release

build:
  <<: *build_definition
  cache:
    key: buildDefault
    paths:
      - $TARGET

build:latest:
  <<: *build_definition
  image: 'rust:alpine'
  cache:
    key: buildLatest
    paths:
      - $TARGET
  allow_failure: true

test:
  stage: test
  image: 'rust:latest'
  cache:
    key: test
    paths:
      - $TARGET
  needs: ["build"]
  script:
    - "rustc --version && cargo --version"
    - cargo test --verbose
    - cargo test --verbose --release

cover:
  stage: test
  # Tarpaulin do not work in Alpine image.
  image: 'rust:latest'
  cache:
    key: cover
    paths:
      - $COVER
      - $TARGET
  before_script:
    - apt-get update
    - apt-get install -y --no-install-recommends libssl-dev pkg-config cmake zlib1g-dev
    # Copy the tarpaulin binary into the ~/.cargo/bin/ directory.
    - mv $COVER/cargo-tarpaulin $CARGO_HOME_BIN || true
    # Check if cargo-tarpaulin is already installed.
    - cargo install cargo-tarpaulin || true
  script:
    - "rustc --version && cargo --version"
    - cargo tarpaulin -v --exclude-files cargo -o Html
  after_script:
    # Copy the tarpaulin binary into the current working directory for caching.
    - mkdir -p $COVER/
    - mv --update $CARGO_HOME_BIN/cargo-tarpaulin $COVER/ || true
  coverage: '/\d+\.\d+\% coverage/'
  artifacts:
    paths:
      - tarpaulin-report.html
  allow_failure: true

examples:
  stage: examples
  image: 'rust:latest'
  cache:
    key: test
    policy: pull
    paths:
      - $TARGET
  script:
    - "rustc --version && cargo --version"
    - make all_examples
  needs: ["test"]

pages:
  stage: doc
  script:
    - cargo doc --no-deps
    - cp -R target/doc public
    - echo '<meta http-equiv="refresh" content="0; url=automatica/index.html">' > public/index.html
  artifacts:
    paths:
      - public
  only:
    - master
